@prefix map: <#> .
@prefix db: <> .
@prefix vocab: <vocab/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix jdbc: <http://d2rq.org/terms/jdbc/> .
@prefix : <http://www.auto_answer_for_movie.com#> .

map:database a d2rq:Database;
	d2rq:jdbcDriver "com.mysql.jdbc.Driver";
	d2rq:jdbcDSN "jdbc:mysql:///auto_answer_for_movie";
	d2rq:username "root";
	d2rq:password "2736";
	jdbc:autoReconnect "true";
	jdbc:zeroDateTimeBehavior "convertToNull";
	.

# Table genre
map:genre a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "genre/@@genre.genre_id@@";
	d2rq:class vocab:Genre;
	d2rq:classDefinitionLabel "genre";
	.
map:genre_genre_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:genre;
	d2rq:property :genreName;
	d2rq:propertyDefinitionLabel "genre genre_name";
	d2rq:column "genre.genre_name";
	.

# Table language
map:language a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "language/@@language.language_id@@";
	d2rq:class vocab:Language;
	d2rq:classDefinitionLabel "language";
	.
map:language_language_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:language;
	d2rq:property :languageName;
	d2rq:propertyDefinitionLabel "language language_name";
	d2rq:column "language.language_name";
	.

# Table movie
map:movie a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "movie/@@movie.movie_id@@";
	d2rq:class vocab:Movie;
	d2rq:classDefinitionLabel "movie";
	.
map:movie_title a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieTitle;
	d2rq:propertyDefinitionLabel "movie title";
	d2rq:column "movie.title";
	.
map:movie_myear a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieYear;
	d2rq:propertyDefinitionLabel "movie myear";
	d2rq:column "movie.myear";
	d2rq:datatype xsd:integer;
	.
map:movie_description a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieDescription;
	d2rq:propertyDefinitionLabel "movie description";
	d2rq:column "movie.description";
	.
map:movie_rate a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieRate;
	d2rq:propertyDefinitionLabel "movie rate";
	d2rq:column "movie.rate";
	d2rq:datatype xsd:double;
	.
map:movie_sdate a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieReleaseDate;
	d2rq:propertyDefinitionLabel "movie sdate";
	d2rq:column "movie.sdate";
	.
map:movie_runtime a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieRuntime;
	d2rq:propertyDefinitionLabel "movie runtime";
	d2rq:column "movie.runtime";
	.
map:movie_alias a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieAlias;
	d2rq:propertyDefinitionLabel "movie alias";
	d2rq:column "movie.alias";
	.
map:movie_language a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieLanguage;
	d2rq:propertyDefinitionLabel "movie language";
	d2rq:column "movie.language";
	.
map:movie_region a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieRegion;
	d2rq:propertyDefinitionLabel "movie region";
	d2rq:column "movie.region";
	.
map:movie_scenarists a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieScenarists;
	d2rq:propertyDefinitionLabel "movie scenarists";
	d2rq:column "movie.scenarists";
	.
map:movie_directors a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieDirectors;
	d2rq:propertyDefinitionLabel "movie directors";
	d2rq:column "movie.directors";
	.
map:movie_actors a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieActors;
	d2rq:propertyDefinitionLabel "movie actors";
	d2rq:column "movie.actors";
	.
map:movie_rating_num a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieRatingNum;
	d2rq:propertyDefinitionLabel "movie rating_num";
	d2rq:column "movie.rating_num";
	d2rq:datatype xsd:integer;
	.
map:movie_genre a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :movieGenre;
	d2rq:propertyDefinitionLabel "movie genre";
	d2rq:column "movie.genre";
	.

# Table movie_to_actor
map:movie_to_actor__link a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
        d2rq:property :hasActedIn;
        d2rq:refersToClassMap map:movie;
	d2rq:join "movie_to_actor.actor_id => person.person_id";
	d2rq:join "movie_to_actor.movie_id => movie.movie_id";
	.

# Table movie_to_director
map:movie_to_director__link a d2rq:PropertyBridge;
        d2rq:belongsToClassMap map:movie;
        d2rq:property :hasDirector;
        d2rq:refersToClassMap map:person;
	d2rq:join "movie_to_director.director_id => person.person_id";
	d2rq:join "movie_to_director.movie_id => movie.movie_id";
	.

# Table movie_to_genre
map:movie_to_genre__link a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :hasGenre;
	d2rq:refersToClassMap map:genre;
	d2rq:join "movie_to_genre.movie_id => movie.movie_id";
	d2rq:join "movie_to_genre.genre_name => genre.genre_name";
    	.

# Table movie_to_language
map:movie_to_language__link a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:movie;
	d2rq:property :hasLanguage;
	d2rq:refersToClassMap map:language;
	d2rq:join "movie_to_language.movie_id => movie.movie_id";
	d2rq:join "movie_to_language.language_name => language.language_name";
    	.

# Table movie_to_region
map:movie_to_region__link a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:movie;
    d2rq:property :showInRegion;
    d2rq:refersToClassMap map:region;
    d2rq:join "movie_to_region.region_name => region.region_name";
    d2rq:join "movie_to_region.movie_id => movie.movie_id";
    .

# Table movie_to_scenarist
map:movie_to_scenarist__link a d2rq:PropertyBridge;
        d2rq:belongsToClassMap map:movie;
        d2rq:property :hasWriter;
        d2rq:refersToClassMap map:person;
	d2rq:join "movie_to_scenarist.scenarist_id => person.person_id";
	d2rq:join "movie_to_scenarist.movie_id => movie.movie_id";
	.

# Table person
map:person a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "person/@@person.person_id@@";
	d2rq:class vocab:person;
	d2rq:classDefinitionLabel "person";
	.
map:person__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
	d2rq:property rdfs:label;
	d2rq:pattern "person #@@person.person_id@@";
	.
map:person_person_id a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
	d2rq:property :person_person_id;
	d2rq:propertyDefinitionLabel "person person_id";
	d2rq:column "person.person_id";
	d2rq:datatype xsd:integer;
	.
map:person_image a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
	d2rq:property :personImage;
	d2rq:propertyDefinitionLabel "person image";
	d2rq:column "person.image";
	.
map:person_cn_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
	d2rq:property :personName;
	d2rq:propertyDefinitionLabel "person cn_name";
	d2rq:column "person.cn_name";
	.
map:person_fn_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
	d2rq:property :personEnglishName;
	d2rq:propertyDefinitionLabel "person fn_name";
	d2rq:column "person.fn_name";
	.
map:person_gender a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
	d2rq:property :personGender;
	d2rq:propertyDefinitionLabel "person gender";
	d2rq:column "person.gender";
	.
map:person_birthday a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
	d2rq:property :personBirthday;
	d2rq:propertyDefinitionLabel "person birthday";
	d2rq:column "person.birthday";
	.
map:person_birthplace a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
	d2rq:property :personBirthplace;
	d2rq:propertyDefinitionLabel "person birthplace";
	d2rq:column "person.birthplace";
	.
map:person_biography a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
	d2rq:property :personBiography;
	d2rq:propertyDefinitionLabel "person biography";
	d2rq:column "person.biography";
	.
map:person_introduction a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
	d2rq:property :personIntroduction;
	d2rq:propertyDefinitionLabel "person introduction";
	d2rq:column "person.introduction";
	.
map:person_occupation a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
	d2rq:property :personOccupation;
	d2rq:propertyDefinitionLabel "person occupation";
	d2rq:column "person.occupation";
	.
map:person_more_cn_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
	d2rq:property :personMoreCn;
	d2rq:propertyDefinitionLabel "person more_cn_name";
	d2rq:column "person.more_cn_name";
	.
map:person_more_fn_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:person;
	d2rq:property :personMoreFn;
	d2rq:propertyDefinitionLabel "person more_fn_name";
	d2rq:column "person.more_fn_name";
	.


# Table region
map:region a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "region/@@region.region_id@@";
	d2rq:class vocab:region;
	d2rq:classDefinitionLabel "region";
	.
map:region_region_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:region;
	d2rq:property :regionName;
	d2rq:propertyDefinitionLabel "region region_name";
	d2rq:column "region.region_name";
	.

